---
title: Configuring your Cloud Foundry for BOSH Backup and Restore
owner: BBR
---

This topic describes what additional configuration you need for your Cloud Foundry deployment to work with BOSH Backup and Restore (BBR).

This page describes how to alter your [`cf-deployment`](https://github.com/cloudfoundry/cf-deployment)
with opsfiles to support BBR. If you deploy your Cloud Foundry another way, you can examine the referenced
opsfiles and alter your deployment accordingly.


<div class="note warning">
  <strong>Warnings</strong>:
  <ul>
    <li><strong>Backup artifacts can contain secrets.</strong> Secure backup artifacts by using encryption or other means.</li>
    <li><strong>The restore is a destructive operation.</strong> BBR is designed to restore CF after a disaster. If it fails, the environment may be left in an unusable state and require reprovisioning. The generic method for restoring a deployment is detailed in <a href="restore.html">Restoring with BOSH Backup and Restore</a>.</li>
    <li><strong>The Cloud Controller API will stop sending and receiving calls</strong> for some time during backup and during restore.</li>
    <li><strong>BBR does not back up any service data.</strong> That will need to be arranged separately.</strong></li>
  </ul>
</div>

## <a id='configure-cf'></a> Supported CF Configurations

Unless otherwise stated, the described functionality is available in `cf-deployment` v 1.3.0 onwards.

If you are using a [`cf-deployment`](https://github.com/cloudfoundry/cf-deployment) with:
<ul>
  <li>an internal MySQL database</li>
  <li>an internal WebDAV/NFS blobstore</li>
  <li>no optional components</li>
</ul>
 it is compatible with BBR when deployed with the [`enable-backup-restore.yml`](https://github.com/cloudfoundry/cf-deployment/blob/master/operations/experimental/enable-backup-restore.yml) opsfile.

If you are using a `cf-deployment` which does not fit in to that category, you may need to use a later version of `cf-deployment` and/or apply more opsfiles - see below sections for more details.

#### <a id='external-blobstore'></a> External Blobstores

For external blobstore support use `cf-deployment` version 1.4.0 or later.
If you are using a `cf-deployment` with an external blobstores hosted on Amazon S3 or compatible storage solutions, you will be able to use BBR as long as your blobstore supports S3 versioning. You will need to deploy your `cf-deployment` with additional opsfiles, see [Backup and Restore of External Blobstores](external-blobstores.html) for details.

#### <a id='external-database'></a> External Databases

If you are using a `cf-deployment` configured with an external MySQL database (with a MariaDB 10.1 engine) hosted on RDS using [`use-external-dbs.yml`](https://github.com/cloudfoundry/cf-deployment/blob/master/operations/use-external-dbs.yml) then you can use BBR as long as the `use-external-dbs.yml` opsfile is specified before the `enable-backup-restore.yml` opsfile when deploying your Cloud Foundry.

Support for RDS with a MySQL 5.5, 5.6 or 5.7 engine is coming soon.

#### <a id='optional-components'></a> Optional Components

These optional `cf-deployment` components require additional backup-restore opsfiles to support BBR. Apply
the backup-restore opsfiles when you deploy your Cloud Foundry.

<table>
<tr>
<th>Optional component</th>
<th>Required backup-restore opsfile</th>
</tr>
<tr>
<td>NFS volume service <code>enable-nfs-volume-service.yml</code></td>
<td><a href="https://github.com/cloudfoundry/cf-deployment/blob/master/operations/experimental/enable-nfs-broker-backup.yml"><code>enable-nfs-broker-backup.yml</code></a></td>
</tr>
<tr>
<td>CredHub data store <code>secure-service-credentials.yml</code></td>
<td><a href="https://github.com/cloudfoundry/cf-deployment/blob/master/operations/experimental/enable-backup-restore-credhub.yml"><code>enable-backup-restore-credhub.yml</code></a></td>
</tr>
<tr>
</table>

## <a id='process'></a> Taking a Backup or Doing a Restore

Once the Cloud Foundry is configured to be compatible with BBR then it can be backed  up and restored using the steps in [Back Up a BOSH Deployment](backup.html#back-up-deployment) and [Restore a BOSH Deployment](restore.html#restore-deployment).

The CC API is stopped between the `pre-backup-lock` and `post-backup-unlock` stages, to ensure that
the backup taken is internally consistent. This means developers will be unable to push apps for a few minutes during the backup.

If you want to see what the backup or restore process will do, it is recommended to run a [`pre-backup-check`](backup.html#check-deployment) against your Cloud Foundry deployment. This will
list the scripts that will be run during a backup, and any ordering of those scripts that will be applied.
You can then examine those scripts.

