---
title: Configuring Cloud Foundry for BOSH Backup and Restore
owner: BBR
---

This topic describes the configuration you need for your Cloud Foundry (CF) deployment to work with BOSH Backup and Restore (BBR).

This topic assumes that you are using
[cf-deployment](https://github.com/cloudfoundry/cf-deployment) with ops files
for your Cloud Foundry deployment.

If you do not use ops files for customization, you can still customize your
Cloud Foundry to use BBR. Examine the contents of the ops files on this page,
and use them as a guide to customize your deployment manifest directly.

<div class="note warning">
  <strong>WARNING</strong>:
  <ul>
    <li><strong>Backup artifacts can contain secrets.</strong> Secure backup artifacts with encryption or by other means.</li>
    <li><strong>The restore is a destructive operation.</strong> BBR is designed to restore CF after a disaster.
        If it fails, the environment can be left in an unusable state and require re-provisioning.
        For the generic method of restoring a deployment, see <a href="restore.html">Restoring with BOSH Backup and Restore</a>.</li>
    <li><strong>Developers are unable to push apps for a few minutes during backup and restore.</strong>
        This is because the Cloud Controller API (CC API) stops sending and receiving calls
        between the <code>pre-backup-lock</code> and <code>post-backup-unlock</code> stages of the process.</li>
    <li><strong>BBR does not back up any service data.</strong>
        Back up Service data, such as Redis or RabbitMQ data, separately.</li>
  </ul>
</div>

## <a id='configure-cf'></a>Supported CF Configurations

To enable backup and restore for your `cf-deployment`, deploy it with the
[enable-backup-restore.yml](https://github.com/cloudfoundry/cf-deployment/blob/master/operations/backup-and-restore/enable-backup-restore.yml) ops file. This
enables BBR backup and restore for default CF components, including the internal blobstore.

To enable BBR backup and restore for different configurations you must also use the appropriate backup and restore ops files as shown in this table:

<table class="nice">
  <tr>
    <th>Configuration</th>
    <th>Configuration Ops File</th>
    <th>Backup and Restore Ops File</th>
  </tr>
  <tr>
    <td>
      A versioned S3-compatible external blobstore. For instructions, see <a href="external-blobstores.html#s3-versioned">Backup and Restore with External Blobstores</a>.
    </td>
    <td>
      <code>use-s3-blobstore.yml</code>
    </td>
    <td>
      <a href="https://github.com/cloudfoundry/cf-deployment/blob/master/operations/backup-and-restore/enable-backup-restore-s3-versioned.yml">
        <code>enable-backup-restore-s3-versioned.yml</code></a>
    </td>
  </tr>
  <tr>
    <td>
      An un-versioned S3-compatible external blobstore. For instructions, see <a href="external-blobstores.html#s3-unversioned">Backup and Restore with External Blobstores</a>.
    </td>
    <td>
      <code>use-s3-blobstore.yml</code>
    </td>
    <td>
      <a href="https://github.com/cloudfoundry/cf-deployment/blob/master/operations/backup-and-restore/enable-backup-restore-s3-unversioned.yml">
        <code>enable-backup-restore-s3-unversioned.yml</code></a>
    </td>
  </tr>
  <tr>
    <td>
      An Azure blobstore with soft delete enabled. For instructions, see <a href="external-blobstores.html#azure">Backup and Restore with External Blobstores</a>.
    </td>
    <td>
      <code>use-azure-blobstore.yml</code>
    </td>
    <td>
      <a href="https://github.com/cloudfoundry/cf-deployment/blob/master/operations/backup-and-restore/enable-backup-restore-azure.yml">
        <code>enable-backup-restore-azure.yml</code></a>
    </td>
  </tr>
  <tr>
    <td>
      A GCS external blobstore. For instructions, see <a href="external-blobstores.html#gcs">Backup and Restore with External Blobstores</a>.
    </td>
    <td>
      <code>use-gcs-blobstore.yml</code>
    </td>
    <td>
      <a href="https://github.com/cloudfoundry/cf-deployment/blob/master/operations/backup-and-restore/enable-backup-restore-gcs.yml">
        <code>enable-backup-restore-gcs.yml</code></a>
    </td>
  </tr>
  <tr>
    <td>
      A <a href="#supported-external-databases">supported external database</a>
    </td>
    <td>
      <code>use-external-dbs.yml</code>
    </td>
    <td>
      No BBR ops file required
    </td>
  </tr>
  <tr>
    <td>
      An NFS broker and volume driver for volume support
    </td>
    <td>
      <code>enable-nfs-volume-service.yml</code>
    </td>
    <td>
      <a href="https://github.com/cloudfoundry/cf-deployment/blob/master/operations/backup-and-restore/enable-backup-restore-nfs-broker.yml">
      <code>enable-backup-restore-nfs-broker.yml</code></a>
    </td>
  </tr>
</table>

BBR can communicate with external blobstores and databases over TLS if they are configured accordingly.

### <a id='supported-external-databases'></a>Supported External Databases

Cloud Foundry components use the backup and restore SDK to interface with databases for backup and restore.
The backup and restore SDK supports the following database versions:

| Name     | Version |
|:---------|:--------|
| MariaDB  | 10.1.x  |
| MySQL    | 5.5.x   |
| MySQL    | 5.6.x   |
| MySQL    | 5.7.x   |
| Postgres | 9.4.x   |
| Postgres | 9.6.x   |


### <a id='supported-blobstore-backup-configurations'></a>Selective Backups Configurations for Blobstores
When configuring your blobstore you can choose to use an external blobstore instead of the default internal blobstore. See <a href="external-blobstores.html">Backup and Restore for External Blobstores
</a> for our list of supported external blobstores.

When backing up your blobstores by default it backups droplets, buildpacks, and packages. When an external blobstore is configured, you can choose what content you want to omit from your backup using the following ops files:

| Selective Backup Ops File                                                                                                                                                                                            | Backup only includes |
|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:---------------------|
| <a href="https://github.com/cloudfoundry/cf-deployment/blob/master/operations/backup-and-restore/skip-backup-restore-droplets.yml">`skip-backup-restore-droplets.yml`</a>                           | Buildpacks, Packages |
| <a href="https://github.com/cloudfoundry/cf-deployment/blob/master/operations/backup-and-restore/skip-backup-restore-droplets-and-packages.yml">`skip-backup-restore-droplets-and-packages.yml`</a> | Buildpacks           |

<p class="note warning">
When utilising selective backup ops files, you should take into a account the <a href="#selective-backup-restore-steps">extra steps needed</a> to get your applications into a running state after a restore, as they will increase your overall recovery time compared to the default configuration.
<p>

#### <a id='selective-backup-restore-steps'></a>Restoring Applications when using Selective Backups
When using the default configuration, all applications will return to a running state after a restore.

When using the `skip-backup-restore-droplets.yml` ops file, you must do the following to get your applications running after a restore:

1. `cf restage` your user-pushed applications.
1. For any applications pushed via a BOSH errand you can either manually `cf restage` them or re-run their errand.

When using the `skip-backup-restore-droplets-and-packages.yml` ops file, you must do the following to get your applications running after a restore:

1. `cf push` your user-pushed applications.
1. For any applications pushed via a BOSH errand you will have to re-run their errand.

### <a id="order"></a> Apply Ops Files in the Correct Order
When enabling backup and restore for a component of `cf-deployment` you must ensure that you have the ops file for enabling backup and restore applied after you have applied the feature. For example if you configured your `cf-deployment` to use an S3 blobstore you would need to make sure that you apply the ops files in the following order:

1. `use-s3-blobstore.yml`
1. `enable-backup-restore-s3-unversioned.yml`

Another example would be configuring your `cf-deployment` to use an external database and enabling backup restore for it.  In this case the relative is order is the following:

1. `use-external-db.yml`
1. `enable-backup-restore.yml`

<p class="note">
This is the <em>relative</em> order. You can apply other ops files in between.<br>
For example, you can apply an ops file between <code>use-s3-blobstore.yml</code> and <code>enable-backup-restore-s3-unversioned.yml</code>,
but do not apply <code>enable-backup-restore-s3-unversioned.yml</code> <em>before</em> <code>use-s3-blobstore.yml</code>.
<p>

## <a id='process'></a> Next Steps

After you have configured Cloud Foundry to be compatible with BBR, you can back up and restore Cloud Foundry.

Follow the procedures in the [Back up a BOSH Deployment](backup.html#back-up-deployment) section of _Backing up with BOSH Backup and Restore_ and the [Restore a BOSH Deployment](restore.html#restore-deployment) section of _Restoring with BOSH Backup and Restore_.

At minimum, run the pre-backup check against your Cloud Foundry deployment by following the first two steps of the [Back up a BOSH Deployment](backup.html#back-up-deployment) section of _Backing up with BOSH Backup_. This lists the scripts that run during a backup and the order in which they are applied.
