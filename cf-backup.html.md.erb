---
title: Configuring your Cloud Foundry for BOSH Backup and Restore
owner: BBR
---

This topic describes what ops-files and additional configuration you need for your Cloud Foundry deployment to work with BOSH Backup and Restore (BBR).

<div class="note warning">
  <strong>Warnings</strong>:
  <ul>
    <li><strong>Backup artifacts can contain secrets.</strong> Secure backup artifacts by using encryption or other means.</li>
    <li><strong>The restore is a destructive operation.</strong> BBR is designed to restore CF after a disaster. If it fails, the environment may be left in an unusable state and require reprovisioning. The generic method for restoring a deployment is detailed in <a href="restore.html">Restoring with BOSH Backup and Restore</a>.</li>
    <li><strong>The Cloud Controller API will stop sending and receiving calls</strong> for the duration of CF restoration.</li>
    <li><strong>BBR does not back up any service data.</strong></li>
  </ul>
</div>

## <a id='configure-cf'></a> Supported CF Configurations

<div class="note">
  <strong>Note</strong>: it is possible to configure a CF that has been deployed without <code>cf-deployment</code> or explicitly using the specified opsfiles by mimicking their behaviour by collocating the same jobs on your deployment.
</div>

If you are using a [`cf-deployment`](https://github.com/cloudfoundry/cf-deployment) with:
<ul>
  <li>an internal MySQL database</li>
  <li>an internal WebDAV/NFS blobstore</li>
  <li>no optional components</li>
</ul>
 then any `cf-deployment` version from v1.3.0 onwards is compatible with BBR, when deployed with the [`enable-backup-restore.yml`](https://github.com/cloudfoundry/cf-deployment/blob/master/operations/experimental/enable-backup-restore.yml) opsfile.

If you are using a `cf-deployment` which does not fit in to that category, you may need to use a later version of `cf-deployment` and apply more ops-files - see below sections for more details.

### <a id='external-blobstore'></a> External Blobstores

If you are using a `cf-deployment` with an external blobstores hosted on Amazon S3 or compatible storage solutions, you will be able to use BBR as long as your blobstore supports S3 versioning. You will need to deploy your `cf-deployment` with additional opsfiles, see [Backup and Restore of External Blobstores](external-blobstores.html) for details.

### <a id='external-database'></a> External Databases

If you are using a `cf-deployment` configured with an external MySQL database (with a MariaDB 10.1 engine) hosted on RDS using [`use-external-dbs.yml`](https://github.com/cloudfoundry/cf-deployment/blob/master/operations/use-external-dbs.yml) then you can use BBR as long as the `use-external-dbs.yml` opsfile is specified before the `enable-backup-restore.yml` opsfile when deploying your Cloud Foundry.

Support for RDS with a MySQL 5.5, 5.6 or 5.7 engine is coming soon.

### <a id='optional-components'></a> Optional Components

Some optional components that can be deployed with `cf-deployment` opsfiles require an additional backup-restore opsfile to be applied for the backup and restore process to work correctly with the optional component.

<table>
<tr>
<th>Optional component</th>
<th>Required backup-restore opsfile</th>
</tr>
<tr>
<td>NFS volume service <code>enable-nfs-volume-service.yml</code></td>
<td><a href="https://github.com/cloudfoundry/cf-deployment/blob/master/operations/experimental/enable-nfs-broker-backup.yml"><code>enable-nfs-broker-backup.yml</code></a></td>
</tr>
<tr>
<td>CredHub data store <code>secure-service-credentials.yml</code></td>
<td><a href="https://github.com/cloudfoundry/cf-deployment/blob/master/operations/experimental/enable-backup-restore-credhub.yml"><code>enable-backup-restore-credhub.yml</code></a></td>
</tr>
<tr>
</table>

## <a id='process'></a> Backup Process

Once the Cloud Foundry is configured to be compatible with BBR then it can be backed up using the steps in [Back Up a BOSH Deployment](backup.html#back-up-deployment). How to get `PATH_TO_BOSH_CA_CERT` depends on how you deployed your CF, such as:

* if you used [`bbl`](https://github.com/cloudfoundry/bosh-bootloader) to deploy then you can directly retrieve the CA cert with `bbl director-ca-cert`
* if you manually deployed then it may be stored in a `secrets.yml` or similar

In order to get a complete backup it is recommended that a backup of the BOSH Director that the CF is deployed on is taken immediately before taking the CF backup.
