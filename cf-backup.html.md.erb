---
title: Configuring your Cloud Foundry for BOSH Backup and Restore
owner: BBR
---

This topic describes what additional configuration you need for your Cloud Foundry deployment to work with BOSH Backup and Restore (BBR).

This page describes how to alter your [`cf-deployment`](https://github.com/cloudfoundry/cf-deployment)
with opsfiles to support BBR.
If you deploy your Cloud Foundry another way, you can examine the referenced
opsfiles and alter your deployment accordingly.


<div class="note warning">
  <strong>WARNING</strong>:
  <ul>
    <li><strong>Backup artifacts can contain secrets.</strong> Secure backup artifacts by using encryption or other means.</li>
    <li><strong>The restore is a destructive operation.</strong> BBR is designed to restore CF after a disaster.
        If it fails, the environment can be left in an unusable state and require reprovisioning.
        The generic method for restoring a deployment is detailed in <a href="restore.html">Restoring with BOSH Backup and Restore</a>.</li>
    <li><strong>The Cloud Controller API (CC API) stops sending and receiving calls</strong> for some time during backup and during restore.</li>
    <li><strong>BBR does not back up any service data.</strong>
        That needs to be arranged separately.</strong></li>
  </ul>
</div>

## <a id='configure-cf'></a> Supported CF Configurations

Unless otherwise stated, the described functionality is available in `cf-deployment` v 1.3.0 and later.

Your CF deployment is compatible with BBR if the following are true:

  + An `enable-backup-restore.yml` opsfile is deployed</li>
  + An internal MySQL database is present</li>
  + An internal WebDAV/NFS blobstore is present</li>
  + No optional components are deployed</li>

If your CF deployment doesn't fit the above compatibility requirements, 
then you might be to use BBR by applying additional opsfiles described below
or by using a later version of `cf-deployment`. 
 
#### <a id='external-blobstore'></a> To Use BBR with External Blobstores

For external blobstore support configure your `cf-deployment`:

   + With  v1.4.0 or later
   + Verify that your external blobstore supports Amazon S3 versioning
   + Deploy your `cf-deployment` with `enable-backup-restore-s3.yml` opsfile

#### <a id='external-database'></a> To use BBR with External Databases

To use BBR with an an external MySQL database (with a MariaDB 10.1 engine) hosted on RDS:

   + Verify that the database uses a MariaDB 10.1 engine
   + Verify that the database is hosted on RDS using [`use-external-dbs.yml`](https://github.com/cloudfoundry/cf-deployment/blob/master/operations/use-external-dbs.yml)
   + Deploy your `cf-deployment` with the `use-external-dbs.yml` opsfile specified before the `enable-backup-restore.yml` opsfile

Support for RDS with a MySQL 5.5, 5.6 or 5.7 engine is coming soon.

#### <a id='optional-components'></a> Optional Components

These optional `cf-deployment` components require additional backup-restore opsfiles to support BBR.
Apply the backup-restore opsfiles when you deploy your Cloud Foundry.

<table>
<tr>
<th>Optional component</th>
<th>Required backup-restore opsfile</th>
</tr>
<tr>
<td>NFS volume service <code>enable-nfs-volume-service.yml</code></td>
<td><a href="https://github.com/cloudfoundry/cf-deployment/blob/master/operations/experimental/enable-nfs-broker-backup.yml"><code>enable-nfs-broker-backup.yml</code></a></td>
</tr>
<tr>
<td>CredHub data store <code>secure-service-credentials.yml</code></td>
<td><a href="https://github.com/cloudfoundry/cf-deployment/blob/master/operations/experimental/enable-backup-restore-credhub.yml"><code>enable-backup-restore-credhub.yml</code></a></td>
</tr>
<tr>
</table>

## <a id='process'></a> Taking a Backup or Doing a Restore

After Cloud Foundry is configured to be compatible with BBR,
it can be backed up and restored using the procedures in [Back Up a BOSH Deployment](backup.html#back-up-deployment)
and [Restore a BOSH Deployment](restore.html#restore-deployment).

The CC API is stopped between the `pre-backup-lock` and `post-backup-unlock` stages to ensure that
the backup taken is internally consistent.
This means developers are unable to push apps for a few minutes during the backup.

If you want to see what the backup or restore process will do, it is recommended to run a [`pre-backup-check`](backup.html#check-deployment) against your Cloud Foundry deployment. This will
list the scripts that will be run during a backup, and any ordering of those scripts that will be applied.
You can then examine those scripts.

